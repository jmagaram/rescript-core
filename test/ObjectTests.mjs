// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Test from "./Test.mjs";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";

var eq = Caml_obj.equal;

Test.run([
      [
        "ObjectTests.res",
        7,
        20,
        41
      ],
      "is: different types"
    ], Object.is("abc", false), eq, false);

Test.run([
      [
        "ObjectTests.res",
        9,
        20,
        30
      ],
      "is: ints"
    ], Object.is(25, 25), eq, true);

Test.run([
      [
        "ObjectTests.res",
        11,
        20,
        33
      ],
      "is: strings"
    ], Object.is("abc", "abc"), eq, true);

Test.run([
      [
        "ObjectTests.res",
        12,
        20,
        33
      ],
      "is: strings"
    ], Object.is("abc", "ABC"), eq, false);

Test.run([
      [
        "ObjectTests.res",
        14,
        20,
        44
      ],
      "is: null and undefined"
    ], Object.is(null, undefined), eq, false);

Test.run([
      [
        "ObjectTests.res",
        15,
        20,
        44
      ],
      "is: null and undefined"
    ], Object.is(undefined, undefined), eq, true);

Test.run([
      [
        "ObjectTests.res",
        16,
        20,
        44
      ],
      "is: null and undefined"
    ], Object.is(null, null), eq, true);

Test.run([
      [
        "ObjectTests.res",
        17,
        20,
        44
      ],
      "is: null and undefined"
    ], Object.is(null, undefined), eq, false);

Test.run([
      [
        "ObjectTests.res",
        18,
        20,
        44
      ],
      "is: undefined and None"
    ], Object.is(undefined, undefined), eq, true);

var nums = [
  1,
  2,
  3
];

Test.run([
      [
        "ObjectTests.res",
        21,
        20,
        32
      ],
      "is: arrays"
    ], Object.is([
          1,
          2,
          3
        ], [
          1,
          2,
          3
        ]), eq, false);

Test.run([
      [
        "ObjectTests.res",
        22,
        20,
        32
      ],
      "is: arrays"
    ], Object.is(nums, nums), eq, true);

Test.run([
      [
        "ObjectTests.res",
        23,
        20,
        32
      ],
      "is: arrays"
    ], Caml_obj.equal([
          1,
          2,
          3
        ], [
          1,
          2,
          3
        ]), eq, true);

Test.run([
      [
        "ObjectTests.res",
        24,
        20,
        32
      ],
      "is: arrays"
    ], [
      1,
      2,
      3
    ] === [
      1,
      2,
      3
    ], eq, false);

Test.run([
      [
        "ObjectTests.res",
        26,
        20,
        30
      ],
      "is: list"
    ], Object.is({
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }, {
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }), eq, false);

Test.run([
      [
        "ObjectTests.res",
        27,
        20,
        30
      ],
      "is: list"
    ], Caml_obj.equal({
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }, {
          hd: 1,
          tl: {
            hd: 2,
            tl: {
              hd: 3,
              tl: /* [] */0
            }
          }
        }), eq, true);

Test.run([
      [
        "ObjectTests.res",
        28,
        20,
        30
      ],
      "is: list"
    ], ({
        hd: 1,
        tl: {
          hd: 2,
          tl: {
            hd: 3,
            tl: /* [] */0
          }
        }
      }) === ({
        hd: 1,
        tl: {
          hd: 2,
          tl: {
            hd: 3,
            tl: /* [] */0
          }
        }
      }), eq, false);

var d = new Date(2000, 1);

Test.run([
      [
        "ObjectTests.res",
        32,
        13,
        23
      ],
      "is: date"
    ], Object.is(new Date(2000, 1), new Date(2000, 1)), eq, false);

Test.run([
      [
        "ObjectTests.res",
        37,
        20,
        30
      ],
      "is: date"
    ], Object.is(d, d), eq, true);

var x = {
  a: 1
};

Test.run([
      [
        "ObjectTests.res",
        40,
        20,
        33
      ],
      "is: objects"
    ], Object.is(x, x), eq, true);

Test.run([
      [
        "ObjectTests.res",
        41,
        20,
        33
      ],
      "is: objects"
    ], Object.is({
          a: 1
        }, {
          a: 1
        }), eq, false);

Test.run([
      [
        "ObjectTests.res",
        42,
        20,
        33
      ],
      "is: objects"
    ], Object.is({}, {}), eq, false);

Test.run([
      [
        "ObjectTests.res",
        43,
        20,
        45
      ],
      "is: === and == operator"
    ], x === x, eq, true);

Test.run([
      [
        "ObjectTests.res",
        44,
        20,
        45
      ],
      "is: === and == operator"
    ], Caml_obj.equal(x, x), eq, true);

Test.run([
      [
        "ObjectTests.res",
        45,
        20,
        45
      ],
      "is: === and == operator"
    ], Caml_obj.equal({
          a: 1
        }, {
          a: 1
        }), eq, true);

Test.run([
      [
        "ObjectTests.res",
        47,
        20,
        31
      ],
      "is: zeros"
    ], Object.is(0, 0), eq, true);

Test.run([
      [
        "ObjectTests.res",
        48,
        20,
        31
      ],
      "is: zeros"
    ], Object.is(-0.0, -0.0), eq, true);

Test.run([
      [
        "ObjectTests.res",
        49,
        20,
        31
      ],
      "is: zeros"
    ], Object.is(0.0, -0.0), eq, false);

function mkBig(s) {
  return BigInt(s);
}

Test.run([
      [
        "ObjectTests.res",
        52,
        20,
        32
      ],
      "is: bigint"
    ], Object.is(BigInt("123456789"), BigInt("123456789")), eq, true);

Test.run([
      [
        "ObjectTests.res",
        53,
        20,
        32
      ],
      "is: bigint"
    ], Object.is(BigInt("123489"), BigInt("123456789")), eq, false);

Test.run([
      [
        "ObjectTests.res",
        54,
        20,
        32
      ],
      "is: bigint"
    ], Object.is(BigInt("000000000"), BigInt("0")), eq, true);

Test.run([
      [
        "ObjectTests.res",
        55,
        20,
        32
      ],
      "is: bigint"
    ], Caml_obj.equal(BigInt("123"), BigInt("123")), eq, true);

Test.run([
      [
        "ObjectTests.res",
        56,
        20,
        32
      ],
      "is: bigint"
    ], BigInt("123") === BigInt("123"), eq, true);

export {
  eq ,
  nums ,
  d ,
  x ,
  mkBig ,
}
/*  Not a pure module */
